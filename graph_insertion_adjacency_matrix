def add_node(v):
    global nodes_count
    if v in nodes: #checks if the given value v exist in the nodes list
        print("given node already present")
    else:
        nodes_count+=1
        nodes.append(v)
        #for adjacency matrix, we need to add a new row and column with value 0 since there is no edge defined
        for n in graph: #add a new column as 0, by inserting 0 as the last value to all the rows in the graph
            n.append(0)
        temp = []   #a new row with empty values
        for i in range(nodes_count):  #adds the value 0 in the new row called temp
            temp.append(0)
        graph.append(temp) #groups the graph with new row

def print_graph(): #printing the adjacency matrix in matrix form
    for i in range(nodes_count):
        for j in range(nodes_count):
            print(graph[i][j], end="  ") #end=" " to provide some spacing
        print() #gives a new line

nodes=[]
graph =[]
nodes_count =0
print("before adding")
print(graph)
print(nodes)
add_node("A")
add_node("B")
add_node("C")
add_node("D")

print("after adding")
print(graph)
print(nodes)
print_graph()
print("count of nodes =",nodes_count)
